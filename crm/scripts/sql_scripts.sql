DROP TABLE IF EXISTS CUSTOMER_ADDRESS;
DROP TABLE IF EXISTS CUSTOMER_VISIT_DATE;
DROP TABLE IF EXISTS CUSTOMER_DEACTIVATION_DETAILS;
DROP TABLE IF EXISTS USER_ROLE;
DROP TABLE IF EXISTS CUSTOMER_SALES_EXEC;
DROP TABLE IF EXISTS BEAT_AREA;
DROP TABLE IF EXISTS MANUFACTURER_ADDRESS;
DROP TABLE IF EXISTS MANUFACTURER_SALES_OFFICER;
DROP TABLE IF EXISTS MANUFACTURER_AREA_MANAGER;
DROP TABLE IF EXISTS MANUFACTURER_SALES_EXECUTIVES;
DROP TABLE IF EXISTS MANUFACTURER_DELIV_EXECUTIVES;
DROP TABLE IF EXISTS MANUFACTURER_USER;
DROP TABLE IF EXISTS MANUFACTURER_SALES_EXEC_BEATS;
DROP TABLE IF EXISTS BEAT_CUSTOMER;
DROP TABLE IF EXISTS SALES_EXEC_BEATS_CUSTOMERS;
DROP TABLE IF EXISTS OTP_ENTITY;
DROP TABLE IF EXISTS CUSTOMER_OTP;
DROP TABLE IF EXISTS ORDER_DELIVERY_PAYMENT;
DROP TABLE IF EXISTS DELIVERY_SCHEDULE;
DROP TABLE IF EXISTS PAYMENT_SCHEDULE;
DROP TABLE IF EXISTS ORDER_REMOVAL_DETAILS;
DROP TABLE IF EXISTS ORDER_DETAILS;
DROP TABLE IF EXISTS ORDER_BOOKING_SCHEDULE_CUSTOMERS;
DROP TABLE IF EXISTS ORDER_BOOKING_SCHEDULE_MANUFACTURERS;
DROP TABLE IF EXISTS ORDER_BOOKING_SCHEDULE;
DROP TABLE IF EXISTS DELIVERY_EXEC_BEATS;
DROP TABLE IF EXISTS MANUFACTURER_BEAT;
DROP TABLE IF EXISTS USER_SECURITY_QUESTIONS;
DROP TABLE IF EXISTS ROLE_RESOURCE_PERMISSION;
DROP TABLE IF EXISTS RESOURCE_PERMISSION; 
DROP TABLE IF EXISTS ROLES;
DROP TABLE IF EXISTS CUSTOMERS;
DROP TABLE IF EXISTS TENANT_ADDRESS;
DROP TABLE IF EXISTS ADDRESS;
DROP TABLE IF EXISTS AREAS;
DROP TABLE IF EXISTS BEATS;
DROP TABLE IF EXISTS MANUFACTURERS;
DROP TABLE IF EXISTS RESOURCE;
DROP TABLE IF EXISTS PERMISSION;
DROP TABLE IF EXISTS SECURITY_QUESTIONS;
DROP TABLE IF EXISTS TENANT_TYPE;
DROP TABLE IF EXISTS TENANT_USER;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS TENANTS; 
DROP TABLE IF EXISTS STATUS;
DROP TABLE IF EXISTS STATUS_TYPE;





CREATE TABLE STATUS_TYPE (ID INT AUTO_INCREMENT PRIMARY KEY, STATUS_TYPE_ID INT NOT NULL UNIQUE, STATUS_TYPE VARCHAR(50) NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE);

CREATE TABLE STATUS (ID INT AUTO_INCREMENT PRIMARY KEY, STATUS_ID INT NOT NULL UNIQUE, STATUS_TYPE_ID INT NOT NULL, STATUS_CODE VARCHAR(50) NOT NULL, STATUS_TEXT VARCHAR(50) NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(STATUS_TYPE_ID) REFERENCES STATUS_TYPE(STATUS_TYPE_ID) ON DELETE CASCADE);

CREATE TABLE TENANT_TYPE (ID INT PRIMARY KEY, TENANT_TYPE VARCHAR(250) NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE);

CREATE TABLE TENANTS (ID INT AUTO_INCREMENT PRIMARY KEY, CODE VARCHAR(250) UNIQUE NOT NULL, NAME VARCHAR(250) NOT NULL,DESCRIPTION VARCHAR(250), TYPE INT NOT NULL, STATUS_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(STATUS_ID) REFERENCES STATUS(STATUS_ID) ON DELETE CASCADE);
ALTER TABLE TENANTS AUTO_INCREMENT=1000;

CREATE TABLE CUSTOMERS (ID INT AUTO_INCREMENT PRIMARY KEY, CODE VARCHAR(250) UNIQUE NOT NULL, NAME VARCHAR(250) NOT NULL, DESCRIPTION VARCHAR(250), STATUS_ID INT NOT NULL, TENANT_ID INT, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, TRANX_COUNTER INT NOT NULL DEFAULT 0, FOREIGN KEY(STATUS_ID) REFERENCES STATUS(STATUS_ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE CUSTOMERS AUTO_INCREMENT=1000;

CREATE TABLE CUSTOMER_VISIT_DATE(ID INT AUTO_INCREMENT PRIMARY KEY, CUSTOMER_ID INT NOT NULL, VISIT_DATE DATE NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE CUSTOMER_VISIT_DATE AUTO_INCREMENT=1000;

CREATE TABLE CUSTOMER_DEACTIVATION_DETAILS(ID INT AUTO_INCREMENT PRIMARY KEY, CUSTOMER_ID INT NOT NULL, DEACT_REASON VARCHAR(2500) NOT NULL, DEACT_DATE DATE NOT NULL, ACTIVATION_REASON VARCHAR(2500), ACTIVATION_DATE DATE, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE CUSTOMER_DEACTIVATION_DETAILS AUTO_INCREMENT=1000;


CREATE TABLE ADDRESS (ID INT AUTO_INCREMENT PRIMARY KEY, CODE VARCHAR(250) UNIQUE NOT NULL, ADDRESS_LINE1 VARCHAR(250), ADDRESS_LINE2 VARCHAR(250), STREET VARCHAR(100), CITY VARCHAR(50), STATE VARCHAR(50), COUNTRY VARCHAR(50), POSTAL_CODE VARCHAR(50), CONTACT_PERSON VARCHAR(250), PHONE_NO VARCHAR(50), MOBILE_NUMBER_PRIMARY VARCHAR(50), MOBILE_NUMBER_SECONDARY VARCHAR(50), EMAIL_ID VARCHAR(250), ADDRESS_TYPE INT NOT NULL, STATUS_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(STATUS_ID) REFERENCES STATUS(STATUS_ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE ADDRESS AUTO_INCREMENT=1000;


CREATE TABLE TENANT_ADDRESS(ID INT AUTO_INCREMENT PRIMARY KEY, ADDRESS_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE, FOREIGN KEY(ADDRESS_ID) REFERENCES ADDRESS(ID) ON DELETE CASCADE);
ALTER TABLE TENANT_ADDRESS AUTO_INCREMENT=1000;


CREATE TABLE CUSTOMER_ADDRESS(ID INT AUTO_INCREMENT PRIMARY KEY, CUSTOMER_ID INT NOT NULL, ADDRESS_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE, FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(ID) ON DELETE CASCADE, FOREIGN KEY(ADDRESS_ID) REFERENCES ADDRESS(ID) ON DELETE CASCADE);
ALTER TABLE CUSTOMER_ADDRESS AUTO_INCREMENT=1000;


CREATE TABLE USERS (ID INT AUTO_INCREMENT PRIMARY KEY, CODE VARCHAR(250) NOT NULL, USER_NAME VARCHAR(250) NOT NULL, PASSWORD VARCHAR(250) NOT NULL, DESCRIPTION VARCHAR(250), EMAIL_ID VARCHAR(250) NOT NULL, MOBILE_NO VARCHAR(250) NOT NULL, FIRST_NAME VARCHAR(250), LAST_NAME VARCHAR(250), STATUS_ID INT NOT NULL, LOGGED_IN INT DEFAULT 0, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, TRANX_COUNTER INT NOT NULL DEFAULT 0, FOREIGN KEY(STATUS_ID) REFERENCES STATUS(STATUS_ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE, CONSTRAINT UC_USER_NAME UNIQUE (TENANT_ID,USER_NAME), CONSTRAINT UC_EMAIL UNIQUE (TENANT_ID,EMAIL_ID), CONSTRAINT UC_MOBILE UNIQUE (TENANT_ID,MOBILE_NO));
ALTER TABLE USERS AUTO_INCREMENT=1000;


CREATE TABLE ROLES (ID INT AUTO_INCREMENT PRIMARY KEY, CODE VARCHAR(250) NOT NULL, ROLE_NAME VARCHAR(250) NOT NULL, DESCRIPTION VARCHAR(250), RANKS INT, STATUS_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(STATUS_ID) REFERENCES STATUS(STATUS_ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE, CONSTRAINT UC_ROLE_NAME UNIQUE (TENANT_ID,ROLE_NAME));
ALTER TABLE ROLES AUTO_INCREMENT=1000;


CREATE TABLE USER_ROLE ( ID INT AUTO_INCREMENT PRIMARY KEY, USER_ID INT NOT NULL, ROLE_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE, FOREIGN KEY(ROLE_ID) REFERENCES ROLES(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE USER_ROLE AUTO_INCREMENT=1000;


CREATE TABLE CUSTOMER_SALES_EXEC (ID INT AUTO_INCREMENT PRIMARY KEY, CUSTOMER_ID INT NOT NULL, SALES_EXEC_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(ID) ON DELETE CASCADE, FOREIGN KEY(SALES_EXEC_ID) REFERENCES USERS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE, CONSTRAINT UC_CUST_SALES_EXEC UNIQUE(CUSTOMER_ID, SALES_EXEC_ID));
ALTER TABLE CUSTOMER_SALES_EXEC AUTO_INCREMENT=1000;


CREATE TABLE TENANT_USER ( ID INT AUTO_INCREMENT PRIMARY KEY, TENANT_ID INT NOT NULL, USER_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE TENANT_USER AUTO_INCREMENT=1000;


CREATE TABLE AREAS (ID INT AUTO_INCREMENT PRIMARY KEY, CODE VARCHAR(250) NOT NULL, NAME VARCHAR(250) NOT NULL, DESCRIPTION VARCHAR(250), WORD_NO VARCHAR(250), PIN_CODE VARCHAR(250), STATUS_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, TRANX_COUNTER INT NOT NULL DEFAULT 0, FOREIGN KEY(STATUS_ID) REFERENCES STATUS(STATUS_ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE AREAS AUTO_INCREMENT=1000;


CREATE TABLE BEATS (ID INT AUTO_INCREMENT PRIMARY KEY, CODE VARCHAR(250) NOT NULL, NAME VARCHAR(250) NOT NULL, DESCRIPTION VARCHAR(250),COVERAGE_SCHEDULE VARCHAR(250), DISTANCE INT, STATUS_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, TRANX_COUNTER INT NOT NULL DEFAULT 0, FOREIGN KEY(STATUS_ID) REFERENCES STATUS(STATUS_ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE BEATS AUTO_INCREMENT=1000;


CREATE TABLE BEAT_AREA ( ID INT AUTO_INCREMENT PRIMARY KEY, BEAT_ID INT NOT NULL, AREA_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(BEAT_ID) REFERENCES BEATS(ID) ON DELETE CASCADE, FOREIGN KEY(AREA_ID) REFERENCES AREAS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE );
ALTER TABLE BEAT_AREA AUTO_INCREMENT=1000;


CREATE TABLE MANUFACTURERS (ID INT AUTO_INCREMENT PRIMARY KEY, CODE VARCHAR(250) NOT NULL, NAME VARCHAR(250) NOT NULL, DESCRIPTION VARCHAR(250), STATUS_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, TRANX_COUNTER INT NOT NULL DEFAULT 0, FOREIGN KEY(STATUS_ID) REFERENCES STATUS(STATUS_ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE MANUFACTURERS AUTO_INCREMENT=1000;


CREATE TABLE MANUFACTURER_ADDRESS(ID INT AUTO_INCREMENT PRIMARY KEY, MANUFACTURER_ID INT NOT NULL, ADDRESS_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(MANUFACTURER_ID) REFERENCES MANUFACTURERS(ID) ON DELETE CASCADE, FOREIGN KEY(ADDRESS_ID) REFERENCES ADDRESS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE MANUFACTURER_ADDRESS AUTO_INCREMENT=1000;


CREATE TABLE MANUFACTURER_SALES_OFFICER(ID INT AUTO_INCREMENT PRIMARY KEY, CODE VARCHAR(250) NOT NULL, NAME VARCHAR(250) NOT NULL, CONTACT_NO VARCHAR(50) NOT NULL, EFFECTIVE_FROM DATE NOT NULL, MANUFACTURER_ID INT NOT NULL, STATUS_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(MANUFACTURER_ID) REFERENCES MANUFACTURERS(ID) ON DELETE CASCADE, FOREIGN KEY(STATUS_ID) REFERENCES STATUS(STATUS_ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE); 
ALTER TABLE MANUFACTURER_SALES_OFFICER AUTO_INCREMENT=1000;


CREATE TABLE MANUFACTURER_AREA_MANAGER(ID INT AUTO_INCREMENT PRIMARY KEY, CODE VARCHAR(250) NOT NULL, NAME VARCHAR(250) NOT NULL, CONTACT_NO VARCHAR(50) NOT NULL, EFFECTIVE_FROM DATE NOT NULL, MANUFACTURER_ID INT NOT NULL, STATUS_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(MANUFACTURER_ID) REFERENCES MANUFACTURERS(ID) ON DELETE CASCADE, FOREIGN KEY(STATUS_ID) REFERENCES STATUS(STATUS_ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE); 
ALTER TABLE MANUFACTURER_AREA_MANAGER AUTO_INCREMENT=1000;


CREATE TABLE MANUFACTURER_SALES_EXECUTIVES(ID INT AUTO_INCREMENT PRIMARY KEY, MANUFACTURER_ID INT NOT NULL, SALES_EXEC_ID INT NOT NULL, TRANX_COUNTER INT NOT NULL,TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(MANUFACTURER_ID) REFERENCES MANUFACTURERS(ID), FOREIGN KEY(SALES_EXEC_ID) REFERENCES USERS(ID), FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID)); 
ALTER TABLE MANUFACTURER_SALES_EXECUTIVES AUTO_INCREMENT=1000;

CREATE TABLE MANUFACTURER_DELIV_EXECUTIVES(ID INT AUTO_INCREMENT PRIMARY KEY, MANUFACTURER_ID INT NOT NULL, DELIV_EXEC_ID INT NOT NULL, TRANX_COUNTER INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(MANUFACTURER_ID) REFERENCES MANUFACTURERS(ID), FOREIGN KEY(DELIV_EXEC_ID) REFERENCES USERS(ID), FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID)); 
ALTER TABLE MANUFACTURER_DELIV_EXECUTIVES AUTO_INCREMENT=1000;


CREATE TABLE MANUFACTURER_USER ( ID INT AUTO_INCREMENT PRIMARY KEY, MANUFACTURER_ID INT NOT NULL, USER_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE,FOREIGN KEY(MANUFACTURER_ID) REFERENCES MANUFACTURERS(ID) ON DELETE CASCADE, FOREIGN KEY(USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE MANUFACTURER_USER AUTO_INCREMENT=1000;


CREATE TABLE MANUFACTURER_SALES_EXEC_BEATS (ID INT AUTO_INCREMENT PRIMARY KEY, MANUFACTURER_ID INT NOT NULL, SALES_EXEC_ID INT NOT NULL, BEAT_ID INT NOT NULL, TRANX_COUNTER INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(MANUFACTURER_ID) REFERENCES MANUFACTURERS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE, FOREIGN KEY(SALES_EXEC_ID) REFERENCES USERS(ID) ON DELETE CASCADE, FOREIGN KEY(BEAT_ID) REFERENCES BEATS(ID) ON DELETE CASCADE);
ALTER TABLE MANUFACTURER_SALES_EXEC_BEATS AUTO_INCREMENT=1000;


CREATE TABLE BEAT_CUSTOMER ( ID INT AUTO_INCREMENT PRIMARY KEY, BEAT_ID INT NOT NULL, CUSTOMER_ID INT NOT NULL, TRANX_COUNTER INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(BEAT_ID) REFERENCES BEATS(ID) ON DELETE CASCADE, FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE BEAT_CUSTOMER AUTO_INCREMENT=1000;


CREATE TABLE SALES_EXEC_BEATS_CUSTOMERS ( ID INT AUTO_INCREMENT PRIMARY KEY, SALES_EXEC_ID INT NOT NULL, BEAT_ID INT NOT NULL, CUSTOMER_ID INT NOT NULL, TENANT_ID INT NOT NULL, VISIT_DATE DATE NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(SALES_EXEC_ID) REFERENCES USERS(ID) ON DELETE CASCADE, FOREIGN KEY(BEAT_ID) REFERENCES BEATS(ID) ON DELETE CASCADE, FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE SALES_EXEC_BEATS_CUSTOMERS AUTO_INCREMENT=1000;


CREATE TABLE CUSTOMER_OTP (ID INT AUTO_INCREMENT PRIMARY KEY, CUSTOMER_ID INT NOT NULL, FIELD_EXEC_ID INT NOT NULL, GENERTAED_OTP VARCHAR(10) NOT NULL, SUBMITTED_OTP VARCHAR(10), OTP_TYPE INT NOT NULL, GENERATED_DATE_TIME DATETIME NOT NULL, SUBMITTED_DATE_TIME DATETIME, RETRY_COUNT INT, STATUS_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(ID) ON DELETE CASCADE, FOREIGN KEY(STATUS_ID) REFERENCES STATUS(STATUS_ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE, FOREIGN KEY(FIELD_EXEC_ID) REFERENCES USERS(ID) ON DELETE CASCADE);
ALTER TABLE CUSTOMER_OTP AUTO_INCREMENT=1000;

CREATE TABLE OTP_ENTITY (ID INT AUTO_INCREMENT PRIMARY KEY, OTP_ID INT NOT NULL, ENTITY_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(OTP_ID) REFERENCES CUSTOMER_OTP(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE); 
ALTER TABLE OTP_ENTITY AUTO_INCREMENT=1000;


CREATE TABLE ORDER_BOOKING_SCHEDULE (ID INT AUTO_INCREMENT PRIMARY KEY, SALES_EXEC_ID INT NOT NULL, BEAT_ID INT NOT NULL, VISIT_DATE DATE NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(SALES_EXEC_ID) REFERENCES USERS(ID) ON DELETE CASCADE, FOREIGN KEY(BEAT_ID) REFERENCES BEATS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE ORDER_BOOKING_SCHEDULE AUTO_INCREMENT=1000;

CREATE TABLE ORDER_DETAILS (ID INT AUTO_INCREMENT PRIMARY KEY, CODE VARCHAR(250) UNIQUE NOT NULL, ORDER_BOOKING_ID INT NOT NULL, NO_OF_LINE_ITEMS INT NOT NULL, BOOK_VALUE DOUBLE NOT NULL, REMARK VARCHAR(250), STATUS_ID INT NOT NULL, CUSTOMER_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(ORDER_BOOKING_ID) REFERENCES ORDER_BOOKING_SCHEDULE(ID) ON DELETE CASCADE, FOREIGN KEY(STATUS_ID) REFERENCES STATUS(STATUS_ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE, FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(ID) ON DELETE CASCADE);
ALTER TABLE ORDER_DETAILS AUTO_INCREMENT=1000;

CREATE TABLE ORDER_REMOVAL_DETAILS(ID INT AUTO_INCREMENT PRIMARY KEY, ORDER_ID INT NOT NULL, REMOVAL_REASON VARCHAR(2500) NOT NULL, REMOVAL_DATE DATE NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(ORDER_ID) REFERENCES ORDER_DETAILS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE ORDER_REMOVAL_DETAILS AUTO_INCREMENT=1000;


CREATE TABLE DELIVERY_SCHEDULE (ID INT AUTO_INCREMENT PRIMARY KEY, ORDER_ID INT NOT NULL, DELIVERY_EXEC_ID INT NOT NULL, BEAT_ID INT NOT NULL, CUSTOMER_ID INT NOT NULL, VISIT_DATE DATE NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(DELIVERY_EXEC_ID) REFERENCES USERS(ID) ON DELETE CASCADE, FOREIGN KEY(BEAT_ID) REFERENCES BEATS(ID) ON DELETE CASCADE, FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(ID) ON DELETE CASCADE, FOREIGN KEY(ORDER_ID) REFERENCES ORDER_DETAILS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE DELIVERY_SCHEDULE AUTO_INCREMENT=1000;

CREATE TABLE PAYMENT_SCHEDULE (ID INT AUTO_INCREMENT PRIMARY KEY, ORDER_ID INT NOT NULL, COLLECTION_EXEC_ID INT NOT NULL, BEAT_ID INT NOT NULL, CUSTOMER_ID INT NOT NULL, VISIT_DATE DATE NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(COLLECTION_EXEC_ID) REFERENCES USERS(ID) ON DELETE CASCADE, FOREIGN KEY(BEAT_ID) REFERENCES BEATS(ID) ON DELETE CASCADE, FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(ID) ON DELETE CASCADE, FOREIGN KEY(ORDER_ID) REFERENCES ORDER_DETAILS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE PAYMENT_SCHEDULE AUTO_INCREMENT=1000;

CREATE TABLE DELIVERY_EXEC_BEATS (ID INT AUTO_INCREMENT PRIMARY KEY, DELIV_EXEC_ID INT NOT NULL, BEAT_ID INT NOT NULL, TRANX_COUNTER INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(DELIV_EXEC_ID) REFERENCES USERS(ID) ON DELETE CASCADE, FOREIGN KEY(BEAT_ID) REFERENCES BEATS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE DELIVERY_EXEC_BEATS AUTO_INCREMENT=1000;

CREATE TABLE ORDER_DELIVERY_PAYMENT (ID INT AUTO_INCREMENT PRIMARY KEY, ORDER_ID INT NOT NULL, DELIVERY_ID INT NOT NULL, PAYMENT_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(ORDER_ID) REFERENCES ORDER_DETAILS(ID) ON DELETE CASCADE, FOREIGN KEY(DELIVERY_ID) REFERENCES DELIVERY_SCHEDULE(ID) ON DELETE CASCADE, FOREIGN KEY(PAYMENT_ID) REFERENCES PAYMENT_SCHEDULE(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE ORDER_DELIVERY_PAYMENT AUTO_INCREMENT=1000;

CREATE TABLE ORDER_BOOKING_SCHEDULE_CUSTOMERS(ID INT AUTO_INCREMENT PRIMARY KEY, ORDER_BOOKING_SCHEDULE_ID INT NOT NULL, CUSTOMER_ID INT NOT NULL, STATUS_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(ORDER_BOOKING_SCHEDULE_ID) REFERENCES ORDER_BOOKING_SCHEDULE(ID) ON DELETE CASCADE, FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE ORDER_BOOKING_SCHEDULE_CUSTOMERS AUTO_INCREMENT=1000;

CREATE TABLE ORDER_BOOKING_SCHEDULE_MANUFACTURERS(ID INT AUTO_INCREMENT PRIMARY KEY, ORDER_BOOKING_SCHEDULE_ID INT NOT NULL, MANUFACTURER_ID INT NOT NULL, STATUS_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(ORDER_BOOKING_SCHEDULE_ID) REFERENCES ORDER_BOOKING_SCHEDULE(ID) ON DELETE CASCADE, FOREIGN KEY(MANUFACTURER_ID) REFERENCES MANUFACTURERS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE ORDER_BOOKING_SCHEDULE_MANUFACTURERS AUTO_INCREMENT=1000;


CREATE TABLE MANUFACTURER_BEAT(ID INT AUTO_INCREMENT PRIMARY KEY, MANUFACTURER_ID INT NOT NULL, BEAT_ID INT NOT NULL, TRANX_COUNTER INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(MANUFACTURER_ID) REFERENCES MANUFACTURERS(ID) ON DELETE CASCADE, FOREIGN KEY(BEAT_ID) REFERENCES BEATS(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE); 
ALTER TABLE MANUFACTURER_BEAT AUTO_INCREMENT=1000;

CREATE TABLE RESOURCE (ID INT PRIMARY KEY, RESOURCE_KEY VARCHAR(50) NOT NULL, NAME VARCHAR(50) NOT NULL, DESCRIPTION VARCHAR(100), TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE RESOURCE AUTO_INCREMENT=1000;

CREATE TABLE PERMISSION (ID INT PRIMARY KEY, PERMISSION_KEY VARCHAR(50) NOT NULL, NAME VARCHAR(50) NOT NULL, DESCRIPTION VARCHAR(100),TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE PERMISSION AUTO_INCREMENT=1000;

CREATE TABLE RESOURCE_PERMISSION ( ID INT PRIMARY KEY, RESOURCE_ID INT NOT NULL, PERMISSION_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(RESOURCE_ID) REFERENCES RESOURCE(ID) ON DELETE CASCADE, FOREIGN KEY(PERMISSION_ID) REFERENCES PERMISSION(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE RESOURCE_PERMISSION AUTO_INCREMENT=1000;

CREATE TABLE ROLE_RESOURCE_PERMISSION (ID INT AUTO_INCREMENT PRIMARY KEY, ROLE_ID INT NOT NULL, RESOURCE_PERMISSION_ID INT NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(ROLE_ID) REFERENCES ROLES(ID) ON DELETE CASCADE, FOREIGN KEY(RESOURCE_PERMISSION_ID) REFERENCES RESOURCE_PERMISSION(ID) ON DELETE CASCADE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE ROLE_RESOURCE_PERMISSION AUTO_INCREMENT=1000;

CREATE TABLE SECURITY_QUESTIONS ( ID INT AUTO_INCREMENT PRIMARY KEY, QUESTION VARCHAR(250), TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE SECURITY_QUESTIONS AUTO_INCREMENT=1000;

CREATE TABLE USER_SECURITY_QUESTIONS ( ID INT AUTO_INCREMENT PRIMARY KEY, USER_ID INT NOT NULL, SECURITY_QUESTION_ID INT NOT NULL, ANSWER VARCHAR(50) NOT NULL, TENANT_ID INT NOT NULL, DATE_CREATED DATE NOT NULL, DATE_MODIFIED DATE, FOREIGN KEY(USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE, FOREIGN KEY(SECURITY_QUESTION_ID) REFERENCES SECURITY_QUESTIONS(ID) ON DELETE CASCADE,FOREIGN KEY(TENANT_ID) REFERENCES TENANTS(ID) ON DELETE CASCADE);
ALTER TABLE USER_SECURITY_QUESTIONS AUTO_INCREMENT=1000;


INSERT INTO STATUS_TYPE (STATUS_TYPE_ID, STATUS_TYPE, DATE_CREATED, DATE_MODIFIED) VALUES (0,"ALL", CURDATE(), CURDATE());
INSERT INTO STATUS_TYPE (STATUS_TYPE_ID, STATUS_TYPE, DATE_CREATED, DATE_MODIFIED) VALUES (1,"TENANT", CURDATE(), CURDATE());
INSERT INTO STATUS_TYPE (STATUS_TYPE_ID, STATUS_TYPE, DATE_CREATED, DATE_MODIFIED) VALUES (2,"CUSTOMER", CURDATE(), CURDATE());
INSERT INTO STATUS_TYPE (STATUS_TYPE_ID, STATUS_TYPE, DATE_CREATED, DATE_MODIFIED) VALUES (3,"MANUFACTURER", CURDATE(), CURDATE());
INSERT INTO STATUS_TYPE (STATUS_TYPE_ID, STATUS_TYPE, DATE_CREATED, DATE_MODIFIED) VALUES (4,"USER", CURDATE(), CURDATE());
INSERT INTO STATUS_TYPE (STATUS_TYPE_ID, STATUS_TYPE, DATE_CREATED, DATE_MODIFIED) VALUES (5,"ORDER", CURDATE(), CURDATE());
INSERT INTO STATUS_TYPE (STATUS_TYPE_ID, STATUS_TYPE, DATE_CREATED, DATE_MODIFIED) VALUES (6,"BEAT", CURDATE(), CURDATE());
INSERT INTO STATUS_TYPE (STATUS_TYPE_ID, STATUS_TYPE, DATE_CREATED, DATE_MODIFIED) VALUES (7,"AREA", CURDATE(), CURDATE());
INSERT INTO STATUS_TYPE (STATUS_TYPE_ID, STATUS_TYPE, DATE_CREATED, DATE_MODIFIED) VALUES (8,"OTP", CURDATE(), CURDATE());


INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (1, 0, 'NOT_APPLICABLE', 'Not Applicable', CURDATE(), CURDATE());
INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (2, 0, 'ACTIVE', 'Active', CURDATE(), CURDATE());
INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (3, 0, 'INACTIVE', 'Inactive', CURDATE(), CURDATE());
INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (4, 0, 'CANCELLED', 'Cancelled', CURDATE(), CURDATE());

INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (10, 1, 'SELF_REGISTERED', 'Self Registered',CURDATE(), CURDATE());

INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (50, 5, 'ORDER_BOOKING_SCHEDULED', 'Order Booking Scheduled', CURDATE(), CURDATE());
INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (51, 5, 'ORDER_CREATED', 'Order Created', CURDATE(), CURDATE());
INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (52, 5, 'DELIVERY_SCHEDULED', 'Delivery Scheduled', CURDATE(), CURDATE());
INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (53, 5, 'DELIVERY_COMPLETED', 'Delivery Completed', CURDATE(), CURDATE());
INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (54, 5, 'PARTIALLY_DELIVERED', 'Partially Delivered', CURDATE(), CURDATE());
INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (55, 5, 'PAYMENT_SCHEDULED', 'Payment Scheduled', CURDATE(), CURDATE());
INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (56, 5, 'PAYMENT_COMPLETED', 'Payment Completed', CURDATE(), CURDATE());
INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (57, 5, 'PARTIALLY_PAID', 'Partially Paid', CURDATE(), CURDATE());
INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (58, 5, 'ORDER_DELETED', 'Order Deleted', CURDATE(), CURDATE());


INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (60, 8, 'OTP_GENERATED', 'OTP Generated', CURDATE(), CURDATE());	
INSERT INTO STATUS (STATUS_ID, STATUS_TYPE_ID, STATUS_CODE, STATUS_TEXT, DATE_CREATED, DATE_MODIFIED) VALUES (61, 8, 'OTP_VERIFIED', 'OTP Verified', CURDATE(), CURDATE());	


INSERT INTO TENANTS VALUES (1, "1", "SYSTEM", "SYSTEM", 1, 2, CURDATE(), CURDATE());



INSERT INTO RESOURCE VALUES (1, 'CUSTOMER', 'Customers', 'Customer Resource', 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE VALUES (2, 'MANUFACTURER', 'Manufacturers', 'Manufacturer Resource', 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE VALUES (3, 'AREA', 'Area', 'Area Resource', 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE VALUES (4, 'BEAT', 'Beat', 'Beat Resource', 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE VALUES (5, 'TENANT', 'Tenant', 'Tenant Resource', 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE VALUES (6, 'USER', 'Users', 'User Resource', 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE VALUES (7, 'ROLE', 'Roles', 'Role Resource', 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE VALUES (8, 'OTP', 'OTP', 'OTP Resource', 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE VALUES (9, 'ORDER', 'Orders', 'Order Resource', 1, CURDATE(), CURDATE());


INSERT INTO PERMISSION VALUES (1, 'CREATE', 'Create', 'Permission to add new entity.', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (2, 'READ', 'Read', 'Permission to view details', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (3, 'UPDATE', 'Update', 'Permission to update the details', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (4, 'DELETE', 'Delete', 'Permission to delete the entity', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (5, 'LIST', 'List', 'Permission to view lists', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (6, 'VIEW_ASSIGNED_BEATS', 'Beats Assigned to Sales Executive', 'Permission to view beats assigned to Sales Executive', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (7, 'VIEW_ASSOCIATED_CUSTOMERS', 'View Customers Associated to Beat', 'Permission to view customers associated to Beat', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (8, 'SCHEDULE_VISIT', 'Schedule Visit for Sales Executive', 'Permission to Schedule Sales Executive visit for customers', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (9, 'APPROVE', 'Approve', 'Permission to approve', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (10, 'VIEW_RESOURCE_PERMISSION', 'View Resource Permission', 'Permission to view role privileges ', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (11, 'EDIT_RESOURCE_PERMISSION', 'Edit Resource Permission', 'Permission to edit role privileges', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (12, 'ASSIGN_BEATS', 'Assign beats to Sales Executive', 'Permission to assign beats to Sales Executive', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (13, 'EDIT_ASSIGNED_BEATS', 'Edit Beats Assigned to Sales Executive', 'Permission to edit beats assigned to Sales Executive', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (14, 'DELETE_ASSIGNED_BEATS', 'Delete Beats Assigned to Sales Executive', 'Permission to delete beats assigned to Sales Executive', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (15, 'ASSOCIATE_CUSTOMERS', 'Associate Customers to Beat', 'Permission to associate customer to beat', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (16, 'EDIT_ASSOCIATED_CUSTOMERS', 'Edit Customers Associated to Beat', 'Permission to edit associated customers to Beat', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (17, 'DELETE_ASSOCIATED_CUSTOMERS', 'Delete Customers Associated to Beat', 'Permission to delete customers associated to Beat', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (18, 'VIEW_SCHEDULED_VISITS', 'View Scheduled Visits for Sales Executive', 'Permission to view Scheduled Sales Executive visits for customers', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (19, 'SCHEDULE_ORDER_BOOKING', 'Schedule Visit for Sales Executive', 'Permission to Schedule Sales Executive visit for customers', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (20, 'SCHEDULE_DELIVERY_BOOKING', 'Schedule Visit for Delivery Executive', 'Permission to Schedule Delivery Executive visit for customers', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (21, 'VIEW_SCHEDULED_ORDER_BOOKINGS', 'View Scheduled Order Bookings for Sales Executive', 'Permission to view Scheduled Order Bookings for customers', 1, CURDATE(), CURDATE());
INSERT INTO PERMISSION VALUES (22, 'VIEW_SCHEDULED_DELIVERY_BOOKINGS', 'View Scheduled Delivery Bookings', 'Permission to view Scheduled Delivery Bookings for customers', 1, CURDATE(), CURDATE());


INSERT INTO RESOURCE_PERMISSION VALUES (1, 1, 1, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (2, 1, 2, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (3, 1, 3, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (4, 1, 4, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (5, 1, 5, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (6, 2, 1, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (7, 2, 2, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (8, 2, 3, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (9, 2, 4, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (10, 2, 5, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (11, 3, 1, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (12, 3, 2, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (13, 3, 3, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (14, 3, 4, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (15, 3, 5, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (16, 4, 1, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (17, 4, 2, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (18, 4, 3, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (19, 4, 4, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (20, 4, 5, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (21, 4, 7, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (22, 4, 15, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (23, 4, 16, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (24, 4, 17, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (25, 5, 1, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (26, 5, 2, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (27, 5, 3, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (28, 5, 4, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (29, 5, 5, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (30, 5, 9, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (31, 6, 1, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (32, 6, 2, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (33, 6, 3, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (34, 6, 4, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (35, 6, 5, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (36, 6, 8, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (37, 6, 6, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (38, 6, 12, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (39, 6, 13, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (40, 6, 14, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (41, 6, 18, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (42, 7, 2, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (43, 7, 10, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (44, 7, 11, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (45, 7, 5, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (46, 8, 5, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (47, 9, 5, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (48, 9, 19, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (49, 9, 20, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (50, 9, 21, 1, CURDATE(), CURDATE());
INSERT INTO RESOURCE_PERMISSION VALUES (51, 9, 22, 1, CURDATE(), CURDATE());



INSERT INTO SECURITY_QUESTIONS VALUES (1, "Which City you were born in ?", 1, CURDATE(), CURDATE());
INSERT INTO SECURITY_QUESTIONS VALUES (2, "What is your mother's maiden name ?", 1, CURDATE(), CURDATE());
INSERT INTO SECURITY_QUESTIONS VALUES (3, "What is your childhood nick name ?", 1, CURDATE(), CURDATE());
INSERT INTO SECURITY_QUESTIONS VALUES (4, "What is your childhood friends's name ?", 1, CURDATE(), CURDATE());
INSERT INTO SECURITY_QUESTIONS VALUES (5, "What is your pet name ?", 1, CURDATE(), CURDATE());


INSERT INTO TENANT_TYPE VALUES (1, 'SYSTEM', CURDATE(), CURDATE());
INSERT INTO TENANT_TYPE VALUES (2, 'RESELLER', CURDATE(), CURDATE());





